@model IEnumerable<DialogueStore.Web.Models.Stock>

@functions
{
    static string HighlightExpiredStockItem(DialogueStore.Web.Models.Stock item) {
        if (item.IsParent) {
            return "success";
        }

        return item.IsExpired ? "warning" : string.Empty;
    }
}

<table class="table table-condensed table-hover">
    <thead>
        <tr>
            <th></th>
            <th>Date Added</th>
            <th>Item</th>
            <th>Ref #</th>
            <th>Location</th>
            <th>Condition</th>
            <th>Purchase Date</th>
            <th>Unit Price</th>
            <th>Expiry Date</th>
            <th></th>
        </tr>
    </thead>
    @{ var itemIdx = 1; }
    @foreach (var item in Model.OrderBy(x => x.DateAdded)) {
                
        <tr class="@HighlightExpiredStockItem(item)">
            <td>@itemIdx</td>
            <td>@Html.DisplayFor(_ => item.DateAdded)</td>
            <td>@Html.DisplayFor(_ => item.Item.Name)</td>
            <td>@Html.DisplayFor(_ => item.RefNo)</td>
            <td><a href="@Url.Action("Details", "Locations", new { id = item.LocationId })">@Html.DisplayFor(_ => item.Location.Name)</a></td>
            <td>@Html.DisplayFor(_ => item.Condition.Name)</td>
            <td>@Html.DisplayFor(_ => item.PurchaseDate)</td>
            <td>@Html.DisplayFor(_ => item.UnitPrice)</td>
            <td>@Html.DisplayFor(_ => item.ExpiryDate)</td>
            <td><a href="@Url.Action("Details", "Stock", new { id = item.Id })">Details</a> | <a href="@Url.Action("Edit", "Stock", new { id = item.Id })">Edit</a> | <a href="@Url.Action("Move", "Stock", new { id = item.Id })">Move</a> | <a href="@Url.Action("Delete", "Stock", new { id = item.Id })">Delete</a> </td>
        </tr>
                
        itemIdx += 1;
    }

</table>
