@model StoreManager.Models.Item

@{
    ViewBag.Title = "Item Details";
}

<div class="container">
    <div class="row">
        <h2 class="page-header">@Model.Name <small>Item Details</small></h2>
    </div>

    <div class="row">
        <ul class="nav nav-pills">
            <li><a href="@Url.Action("Index", "Items")">All Items</a></li>
            <li><a href="@Url.Action("Create", "Items")">Create New</a></li>
            <li class="active"><a href="@Url.Action("Details", "Items", new { id = Model.Id })">Details</a></li>
            <li><a href="@Url.Action("Edit", "Items", new { id = Model.Id })">Edit</a></li>
            <li><a href="@Url.Action("Delete", "Items", new { id = Model.Id })">Delete Item</a></li>
            <li><a href="@Url.Action("Create", "Stock", new { id = Model.Id })">Add Stock</a></li>
        </ul>
    </div>

    <p>&nbsp;</p>

    @if (ViewHelpers.GetExpiredItemCount(Model.Stocks) > 0) {
        <div class="row">
            @ViewHelpers.ShowExpiredItemsWarninig()
        </div>

        <p>&nbsp;</p>
    }

    <div class="row">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Item Information</h3>
            </div>
            <div class="panel-body">
                <table class="table table-condensed table-hover">
                    <tr>
                        <td>@Html.DisplayNameFor(f => f.Name)</td>
                        <td>@Html.DisplayFor(f => f.Name)</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(f => f.QuantityinStock)</td>
                        <td>@Html.DisplayFor(f => f.QuantityinStock)</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(f => f.ReorderLevel)</td>
                        <td>@Html.DisplayFor(f => f.ReorderLevel)</td>
                    </tr>
                    @if (!String.IsNullOrWhiteSpace(Model.Notes)) {
                        <tr>
                            <td>@Html.DisplayNameFor(f => f.Notes)</td>
                            <td>@Html.DisplayFor(f => f.Notes)</td>
                        </tr>
                    }
                    <tr>
                        <td>@Html.DisplayNameFor(f => f.Discontinued)</td>
                        <td>@Html.DisplayFor(f => f.Discontinued)</td>
                    </tr>
                </table>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Stock Items <small>@StockCountIfAny(Model.Stocks)</small></h3>
            </div>
            <div class="panel-body">
                <p>
                    <a href="@Url.Action("Create", "Stock", new { id = Model.Id })" class="btn btn-default btn-success btn-sm">Add Stock</a>
                </p>
                @if (Model.Stocks.Any()) {
                    @Html.Partial("_StockItemsTable", Model.Stocks)
                }
                else {
                    <div class="alert alert-info alert-dismissable">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        <strong>Empty!</strong> there are no stock items to display here. <a class="alert-link" href="@Url.Action("Create", "Stock", new { id = Model.Id })">Click here to add a new stock item</a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@helper StockCountIfAny(List<StoreManager.Models.Stock> stocks) {
    if (stocks != null && stocks.Any()) {
    <span>@stocks.Count() entries</span>
    }
}