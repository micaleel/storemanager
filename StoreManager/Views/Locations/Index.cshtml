@model IEnumerable<StoreManager.Models.Location>

@{
    ViewBag.Title = "Locations";
}

@functions
{
    static MvcHtmlString HighlightStoreRow(StoreManager.Models.Location location) {
        return !location.IsStore ? MvcHtmlString.Empty : MvcHtmlString.Create("success");
    }
}
<div class="container">

    <div class="row">
        <h2 class="page-header">Locations <small>showing @Model.Count() locations</small></h2>
    </div>

    <div class="row">
        <ul class="nav nav-pills">
            <li class="active"><a href="@Url.Action("Index")">All Locations</a></li>
            <li><a href="@Url.Action("Create")">Create New</a></li>
        </ul>
    </div>

    <p>&nbsp;</p>

    <div class="row">
        @if (!Model.Any(x => x.IsStore)) {
            <div class="alert alert-danger alert-dismissable">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                <strong>Warning!</strong> No location has been set as a store.
            </div>
        }

        <table class="table table-hover">
            <tr>
                <th>@Html.DisplayNameFor(f => f.Name)</th>
                <th>@Html.DisplayNameFor(f => f.IsStore)</th>
                <th></th>
            </tr>

            @foreach (var item in Model.OrderByDescending(x => x.IsStore).ThenBy(x => x.Name)) {
                <tr class="@HighlightStoreRow(item)">
                    <td><a href="@Url.Action("Details", new { id = item.Id })">@Html.DisplayFor(_ => item.Name)</a></td>
                    <td>@Html.DisplayFor(_ => item.IsStore)</td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </table>
    </div>
</div>
